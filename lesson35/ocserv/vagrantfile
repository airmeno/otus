# -*- mode: ruby -*-
# vim: set ft=ruby :

Vagrant.configure(2) do |config|
  config.vm.box = "centos/7"

    config.vm.define "ocserv" do |s|
      s.vm.hostname = 'ocserv'
      s.vm.network "private_network", ip: "192.168.50.10"
    s.vm.provider :virtualbox do |v|
      v.name = "ocserv"
      v.customize ["modifyvm", :id, "--cpus", 1, "--memory", "512"]
    end

    s.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      #ansible.verbose = "vvv"
      ansible.playbook = "playbook.yml"
      ansible.become = "true"
    end

    s.vm.provision "shell", inline: <<-SHELL
      mkdir -p ~root/.ssh
      cp ~vagrant/.ssh/auth* ~root/.ssh
      SHELL
  end
  
    config.vm.define "client", primary: true do |c|
      c.vm.hostname = 'client'
      c.vm.network "private_network", ip: "192.168.50.20"
    c.vm.provider :virtualbox do |v|
      v.name = "client"
      v.customize ["modifyvm", :id, "--memory", "512"]
    end

    c.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      #ansible.verbose = "vvv"
      ansible.playbook = "playbook.yml"
      ansible.become = "true"
    end

    c.vm.provision "shell", inline: <<-SHELL
      mkdir -p ~root/.ssh
      cp ~vagrant/.ssh/auth* ~root/.ssh

      bash -c 'echo "123456" | sudo openconnect -q -b --servercert pin-sha256:GtjIhKWDoR62JGeWj+78xlqWVYOU/KG9SRTKKWkXfxM= 192.168.50.10:443 --user user1 --passwd-on-stdin'
      SHELL
  end
end
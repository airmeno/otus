# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
 :inetRouter => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.50.1', adapter: 2, netmask: "255.255.255.240", virtualbox__intnet: "router-net"} # intnet это vlan
               ]
  },
 :inetRouter2 => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.50.2', adapter: 2, netmask: "255.255.255.240", virtualbox__intnet: "router-net"}
               ]
  },
  :centralRouter => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.50.11', adapter: 2, netmask: "255.255.255.240", virtualbox__intnet: "router-net"},
                   {ip: '192.168.10.10', adapter: 3, netmask: "255.255.255.0", virtualbox__intnet: "central-net"}
                ]
  },
  :centralServer => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.10.20', adapter: 2, netmask: "255.255.255.0", virtualbox__intnet: "central-net"}
                ]
  }
}

Vagrant.configure("2") do |config|
  MACHINES.each do |boxname, boxconfig|

    config.vm.define boxname do |box|
        
        box.vm.box = boxconfig[:box_name]
        box.vm.host_name = boxname.to_s

        config.vm.provider "virtualbox" do |v|
          v.memory = 256
        end

        boxconfig[:net].each do |ipconf|
          box.vm.network "private_network", **ipconf
        end
        
        if boxconfig.key?(:public)
          box.vm.network "public_network", boxconfig[:public]
        end

        box.vm.provision "shell", inline: <<-SHELL
          mkdir -p ~root/.ssh
                cp ~vagrant/.ssh/auth* ~root/.ssh
          yum install -y traceroute      
        SHELL

        case boxname.to_s
        when "inetRouter"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            sudo yum -y install epel-release && yum install libpcap -y 
            sudo rpm -Uvh http://li.nux.ro/download/nux/misc/el7/x86_64/knock-server-0.7-1.el7.nux.x86_64.rpm
            sudo cp /vagrant/configs/knockd.conf /etc/knockd.conf
            sudo echo 'OPTIONS="-i eth1"' >> /etc/sysconfig/knockd 
            sudo systemctl enable knockd

            sudo echo "net.ipv4.conf.all.forwarding=1" >> /etc/sysctl.conf
            sudo sysctl -p
            sudo echo "192.168.10.0/24 via 192.168.50.11 dev eth1" > /etc/sysconfig/network-scripts/route-eth1

            # Firewalld settings for knockd
            sudo systemctl enable --now firewalld.service
            sudo firewall-cmd --permanent --add-masquerade
            sudo firewall-cmd --permanent --new-zone=otus
            sudo firewall-cmd --reload
            sudo firewall-cmd --permanent --zone=public --remove-interface=eth1
            sudo firewall-cmd --permanent --zone=otus --add-interface=eth1
            sudo firewall-cmd --reload

            reboot
          SHELL

        when "inetRouter2"
          box.vm.network "forwarded_port", guest: 8080, host: 8888, host_ip: "127.0.0.1"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            sudo bash -c 'echo "net.ipv4.conf.all.forwarding=1" >> /etc/sysctl.conf'
            sudo sysctl -p

            sudo echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0
            sudo echo "GATEWAY=192.168.50.1" >> /etc/sysconfig/network-scripts/ifcfg-eth1
            sudo bash -c 'echo "192.168.10.0/24 via 192.168.50.11 dev eth1" > /etc/sysconfig/network-scripts/route-eth1'
            sudo systemctl restart network

            # Проброс портов через Firewald  
            sudo systemctl enable --now firewalld.service
            sudo firewall-cmd --permanent --add-forward-port=port=8080:proto=tcp:toport=80:toaddr=192.168.10.20
            sudo firewall-cmd --permanent --direct --passthrough ipv4 -t nat -A POSTROUTING -d 192.168.10.20/32 -p tcp --dport 80 -j SNAT --to-source 192.168.50.2
            # firewall-cmd --permanent --add-masquerade
            sudo firewall-cmd --reload

            # # Проброс портов через iptables (dnat & snat)
            # sudo yum install -y iptables-services && sudo systemctl enable iptables   
            # sudo iptables -t nat -A PREROUTING -i eth0 -p tcp -m tcp --dport 8080 -j DNAT --to-destination 192.168.10.20:80
            # sudo iptables -t nat -A POSTROUTING --destination 192.168.10.20/32 -j SNAT --to-source 192.168.50.2
            # sudo service iptables save

            reboot
          SHELL

        when "centralRouter"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            sudo yum install -y epel-release && sudo yum install -y nmap
            sudo bash -c 'echo "net.ipv4.conf.all.forwarding=1" >> /etc/sysctl.conf'
            sudo sysctl -p

            sudo echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0 
            sudo echo "GATEWAY=192.168.50.1" >> /etc/sysconfig/network-scripts/ifcfg-eth1
            sudo systemctl restart network

            cp  /vagrant/configs/knock.sh /home/vagrant/knock.sh; chmod u+x /home/vagrant/knock.sh
            reboot
          SHELL

        when "centralServer"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            sudo yum install -y epel-release
            sudo yum install -y nginx
            sudo systemctl enable --now nginx

            sudo echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0
            sudo echo "GATEWAY=192.168.10.10" >> /etc/sysconfig/network-scripts/ifcfg-eth1
            sudo systemctl restart network
            reboot
          SHELL

        end
    end   
  end
end